What is Java?
ÔÅ±	Java is a programming language and a platform. Java is a high level, robust, object-oriented and secure programming language.
ÔÅ±	Java was developed by Sun Microsystems (which is now the subsidiary of Oracle) in the year 1995. 
ÔÅ±	James Gosling is known as the father of Java. Before Java, its name was Oak. Since Oak was already a registered company, so James Gosling and his team changed the name from Oak to Java.
ÔÅ±	Platform: Any hardware or software environment in which a program runs, is known as a platform. Since Java has a runtime environment (JRE) and API, it is called a platform.

What are the applications of Java?
According to Sun, 3 billion devices run Java. There are many devices where Java is currently used. Some of them are as follows:
1.	Desktop Applications such as acrobat reader, media player, antivirus, etc.
2.	Web Applications such as irctc.co.in, sbionline.com, etc.
3.	Enterprise Applications such as banking applications.
4.	Mobile
5.	Embedded System
6.	Smart Card
7.	Robotics
8.	Games, etc.

Type of Java applications
There are mainly 4 types of applications that can be created using Java programming:
1)	Standalone Application
Standalone applications are also known as desktop applications or window-based applications. These are traditional software that we need to install on every machine. Examples of standalone application are Media player, antivirus, etc. AWT and Swing are used in Java for creating standalone applications.
      2) Web Application
An application that runs on the server side and creates a dynamic page is called a web application. Currently, Servlet, JSP, Struts, Spring, Hibernate, JSF, etc. technologies are used for creating web applications in Java.

3) Enterprise Application
An application that is distributed in nature, such as banking applications, etc. is called an enterprise application. It has advantages like high-level security, load balancing, and clustering. In Java, EJB is used for creating enterprise applications.
4) Mobile Application
An application which is created for mobile devices is called a mobile application. Currently, Android and Java ME are used for creating mobile applications.

JAVA Platforms/Editions
There are 4 platforms or editions of Java:
1) Java SE (Java Standard Edition)
It is a Java programming platform. It includes Java programming APIs such as java.lang, java.io, java.net, java.util, java.sql, java.math etc. It includes core topics like OOPs, String, Regex, Exception, Inner classes, Multithreading, I/O Stream, Networking, AWT, Swing, Reflection, Collection, etc.
2) Java EE (Java Enterprise Edition)
It is an enterprise platform that is mainly used to develop web and enterprise applications. It is built on top of the Java SE platform. It includes topics like Servlet, JSP, Web Services, EJB, JPA, etc.
3) Java ME (Java Micro Edition)
It is a micro platform that is dedicated to mobile applications.
4) JavaFX
It is used to develop rich internet applications. It uses a lightweight user interface API.

Features of JAVA
List of features:
1.	Object Oriented
2.	Simple
3.	Secure
4.	Platform independent
5.	Robust
6.	Portable
7.	Architecture Neutral
8.	Dynamic
9.	Interpreted
10.	 High performance  
11.	 Multi-threaded
12.	 Distributed
13.	 Network Savvy

1.	Object-oriented
Java is an object-oriented programming language. Everything in Java is an object. Object-oriented means we organize our software as a combination of different types of objects that incorporate both data and behavior.
Object-oriented programming (OOPs) is a methodology that simplifies software development and maintenance by providing some rules.
Basic concepts of OOPs are:
1. Object
2. Class
3. Inheritance
4. Polymorphism
5. Abstraction
6. Encapsulation

2.  Simple
Java is very easy to learn, and its syntax is simple, clean and easy to understand. 
According to Sun Microsystem, Java language is a simple programming language because:
Java syntax is based on C++ (so easier for programmers to learn it after C++).
Java has removed many complicated and rarely-used features, for example, explicit pointers, operator overloading, etc.
There is no need to remove unreferenced objects because there is an Automatic Garbage Collection in Java.
3.  Architecture-neutral
Java is architecture neutral because there are no implementation dependent features, for example, the size of primitive types is fixed.
In C programming, int data type occupies 2 bytes of memory for 32-bit architecture and 4 bytes of memory for 64-bit architecture. However, it occupies 4 bytes of memory for both 32 and 64-bit architectures in Java.

4. Platform Independent 
Java is platform independent because it is different from other languages like C, C++, etc. which are compiled into platform specific machines while Java is a write once, run anywhere language. A platform is the hardware or software environment in which a program runs.
There are two types of platforms software-based and hardware-based. Java provides a software-based platform.
The Java platform differs from most other platforms in the sense that it is a software-based platform that runs on top of other hardware-based platforms. 
It has two components:
Runtime Environment ÔÉ† Hardware based system
API(Application Programming Interface) ÔÉ† Web based system
Java code can be executed on multiple platforms, for example, Windows, Linux, Sun Solaris, Mac/OS, etc. Java code is compiled by the compiler and converted into bytecode. This bytecode is a platform-independent code because it can be run on multiple platforms, i.e., Write Once and Run Anywhere (WORA).
5. Secured
Java is best known for its security. With Java, we can develop virus-free systems. Java is secured because:
ÔÅ±	No explicit pointer
ÔÅ±	Java Programs run inside a virtual machine sandbox
ÔÅ±	Classloader: Classloader in Java is a part of the Java Runtime Environment (JRE) which is used to load Java classes into the Java Virtual Machine dynamically. It adds security by separating the package for the classes of the local file system from those that are imported from network sources.
ÔÅ±	Bytecode Verifier: It checks the code fragments for illegal code that can violate access rights to objects.
ÔÅ±	Security Manager: It determines what resources a class can access such as reading and writing to the local disk.
Java language provides these securities by default. Some security can also be provided by an application developer explicitly through SSL, JAAS, Cryptography, etc.
6. Robust
Java is robust because:
ÔÅ±	It uses strong memory management.
ÔÅ±	There is a lack of pointers that avoids security problems.
ÔÅ±	Java provides automatic garbage collection which runs on the Java Virtual Machine to get rid of objects which are not being used by a Java application anymore.
ÔÅ±	There are exception handling and the type checking mechanism in Java. All these points make Java robust.
7. Portable
Java is portable because it facilitates you to carry the Java bytecode to any platform. It doesn't require any implementation.
8. High-performance
Java is faster than other traditional interpreted programming languages because Java bytecode is "close" to native code. It is still a little bit slower than a compiled language (e.g., C++). Java is an interpreted language that is why it is slower than compiled languages, e.g., C, C++, etc.
9. Distributed
Java is distributed because it facilitates users to create distributed applications in Java. RMI (Remote Method Invocation) and EJB (Enterprise Java Bean) are used for creating distributed applications. This feature of Java makes us able to access files by calling the methods from any machine on the internet.
10.	Multi-threaded
A thread is like a separate program, executing concurrently. We can write Java programs that deal with many tasks at once by defining multiple threads. The main advantage of multi-threading is that it doesn't occupy memory for each thread. It shares a common memory area. Threads are important for multi-media, Web applications, etc.
11.  Dynamic
Java is a dynamic language. It supports the dynamic loading of classes. It means classes are loaded on demand. It also supports functions from its native languages, i.e., C and C++.
Java supports dynamic compilation and automatic memory management (garbage collection).
12.	 Interpreted
Java interpreter is the process of converting byte code into native code called as interpreter.
13.  Network Savvy
It provides Facility to access the Java application from across the internet via URL‚Äôs. It also supports the socket programming for sending the message from client to server.


[A[A[A[A[A

[A[A
